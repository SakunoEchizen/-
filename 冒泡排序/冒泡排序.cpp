// 冒泡排序.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//


#include"func.h"

//它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。

//比较相邻的元素。如果第一个比第二个大，就交换它们两个；对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；针对所有的元素重复以上的步骤，除了最后一个；

int *Bubble_Sort(int *a,int len)
{
    int temp;

    int length = sizeof( a ) /sizeof(a[0]);
    cout << "将一个函数A里面定义的数组当参数传给函数B时，在B里面计算：length of sequence :" << length << endl;
    //当将数组作为实参传递到另一个函数中时, 另一个函数的形参相当于一个指针变量, 因为将数组的名作为实参时, 就是将数字的首地址作为实参
    //静态数组传进来作为参数，结果是一样的。
    length = len;
    for (int i = 0; i < length -1; i++)
    {
        for (int j=0; j < length -1-i; j++)
        {
            if (a[j] > a[j + 1])
            {
                temp = a[j + 1];
                a[j + 1] = a[j];
                a[j] = temp;
            }
        }
    }
    return a;
    //想要返回一个数组，那么函数必须是指针函数，且指着指针函数的形参也是指针才可以
}



// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
